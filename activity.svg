<svg xmlns="http://www.w3.org/2000/svg" width="480" height="1003" class="">
    <defs>
        <style/>
    </defs>
    <style>@keyframes animation-gauge{0%{stroke-dasharray:0 329}}@keyframes animation-fade{0%{opacity:0}to{opacity:1}}@keyframes animation-rainbow{0%,to{color:#7f00ff;fill:#7f00ff}14%{color:#a933ff;fill:#a933ff}29%{color:#007fff;fill:#007fff}43%{color:#00ff7f;fill:#00ff7f}57%{color:#ff0;fill:#ff0}71%{color:#ff7f00;fill:#ff7f00}86%{color:red;fill:red}}svg{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;font-size:14px;color:#777}h2{margin:8px 0 2px;padding:0;color:#0366d6;font-weight:400;font-size:16px}h2 svg{fill:currentColor}section&gt;.field{margin-left:5px;margin-right:5px}.field{display:flex;align-items:center;margin-bottom:2px;white-space:nowrap}.field svg{margin:0 8px;fill:#959da5;flex-shrink:0}.field.error{color:#cb2431}.field.error svg{fill:#cb2431}.row{display:flex;flex-wrap:wrap}.row section{flex:1 1 0}.column{display:flex;flex-direction:column;align-items:center}#metrics-end,.fill-width{width:100%}.stargazers .chartist .ct-post{fill:rgba(127,127,127,.8)!important;color:rgba(127,127,127,.8)!important;font-size:9px;text-anchor:middle}.activity{margin-bottom:12px}.activity .field{width:100%;overflow:hidden;text-overflow:ellipsis;max-width:450px;white-space:nowrap;margin-bottom:0}.activity .field .content{flex-grow:1;text-overflow:ellipsis;overflow:hidden}.activity .commit .sha,.activity .issue,.activity .repo{display:inline;color:#58a6ff}.activity .code,span.code{background-color:#7777771f;padding:1px 5px;font-size:80%;border-radius:6px;color:#777;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;margin:0 4px -3px}.activity .details{padding-left:38px;display:flex;flex-direction:column;font-size:13px;color:#666}.activity .commit{display:flex;align-items:center}.activity .commit .sha,code{font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace}.activity .commit .sha{margin-right:4px}.activity .commit .message{overflow:hidden;text-overflow:ellipsis;width:360px;white-space:nowrap}.activity .details&gt;.comment{overflow:hidden;text-overflow:ellipsis;display:block;width:420px;margin-top:6px;border-left:3px solid#777777b2;padding-left:6px;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}code{background-color:#7777771f;display:inline-block;border-radius:6px;color:#777;padding:1px 5px;font-size:80%}:root{--color-calendar-graph-day-bg:#ebedf0;--color-calendar-graph-day-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-bg:#9be9a8;--color-calendar-graph-day-L2-bg:#40c463;--color-calendar-graph-day-L3-bg:#30a14e;--color-calendar-graph-day-L4-bg:#216e39;--color-calendar-halloween-graph-day-L1-bg:#ffee4a;--color-calendar-halloween-graph-day-L2-bg:#ffc501;--color-calendar-halloween-graph-day-L3-bg:#fe9600;--color-calendar-halloween-graph-day-L4-bg:#03001c;--color-calendar-graph-day-L4-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L3-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L2-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-border:rgba(27,31,35,0.06)}</style>
    <style/>
    <foreignObject x="0" y="0" width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" class="items-wrapper">
            <section>
                <h2 class="field">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                        <path fill-rule="evenodd" d="M0 8a8 8 0 1116 0v5.25a.75.75 0 01-1.5 0V8a6.5 6.5 0 10-13 0v5.25a.75.75 0 01-1.5 0V8zm5.5 4.25a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM3 6.75C3 5.784 3.784 5 4.75 5h6.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0111.25 10h-6.5A1.75 1.75 0 013 8.25v-1.5zm1.47-.53a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.06l-1.5 1.5a.75.75 0 01-1.06 0L8 7.81l-.97.97a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 010-1.06z"/>
                    </svg>
                    Recent activity
                </h2>
                <div class="row">
                    <section>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"/>
                                        <path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"/>
                                    </svg>
                                    <div class="content">
                                        Opened
                                        <span class="issue">#2678 CI: Check/rewrite carrige return </span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened  in <span class="repo">haskell/haskell-language-server</span></div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z"/>
                                    </svg>
                                    <div class="content">
                                        Pushed 65 commits in
                                        <span class="repo">Anton-Latukha/haskell-language-server</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>on branch <span class="code">2021-12-25-getDocsTryGhc</span></div>
                                    <div class="commit">
                                        <div class="sha">#f62ec3e</div>
                                        <div class="message">Add ghc 9.2.1 to gitlab ci (#2636)

* Remove unused nix config

* Add ghc-9.2.1 to gitlab build

* Remove not needed alpine workaround

* Use -j1 to fix oom in bsd-12

* Use -j1 to try fix oom in bsd-13

* exclude 9.2.1 for freebsd

Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#167e556</div>
                                        <div class="message">Use T.decodeUtf8 + BS.readFile instead of T.readFile (#2637)</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#65dff92</div>
                                        <div class="message">Disable alpine build by default (#2638)

* Disable alpine by default

* guard hlint plugin

* Rename hls in actual cabal project file</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#310e6a4</div>
                                        <div class="message">support selection range lsp feature (#2565)

* add selection range support

* add the whole import area as a selection step

* add selection range plugin to all project files

* merge type signature with value definition

* support ghc 9

* fix it for ghc-9.0

* remove unnecessary import

* reformat GhcIde.hs

* selection range: make it easier to understand

* selection range: improve error handling

* update lsp-types to 1.4.0.1

* add selection range to doc

* fix comment for findSelectionRangesByPositions

* remove a use of partial function

* update author &amp; maintainer

* use foldlM1 instead of foldl1

* add testdata to cabal file

* update performace tips and log level

* update lsp-types in nix

Co-authored-by: Pepe Iborra &lt;pepeiborra@gmail.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#6123268</div>
                                        <div class="message">Flake ghc 92 (#2621)

* refactor(flake): Use a separate flake for hackage sources

This will be easier to update, and pass them as one dictionary.

* flake: support for GHC 9.2

I've naively copied most of the special cases for `GHC 9.0.1`.

- `nix develop .\#haskell-language-server-921` gives me a shell in
  which I'm able to `cabal build`
- `nix build .#haskell-language-server-921` builds HLS binary. I was
  able to use it in a proprietary codebase (by importing the flake) and
  it works fine.
- some plugins are disabled, `brittany`, `stylishhaskell`, `hlint`,
  `haddockComments`, `alternateNumberFormat`. I didn't fight too much to
  fix this because I'm not using them. I'll do an effort in the future
  to fix them.
- `nix develop .\#haskell-language-server-921-dev` does not starts, I
  need to investigate.

Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;
Co-authored-by: Javier Neira &lt;atreyu.bbb@gmail.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#f33954e</div>
                                        <div class="message">Correct issues with pre-commit hook (#2597)

* Reformat in accordance with pre-commit hook

* Typo fix: add missing comma to documented pre-commit hook

* Exclude failing files from pre-commit hook

'stylish-haskell' seems to always fail with a parse error on several
files under ghcide/. Excluding these files from the pre-commit hook
ensures that this hook can always succeed.

* Add stylish-haskell excludes to Nix pre-commit hook

* Reformat again in accordance with pre-commit hook

This is basically the same as 800c165, but applied to new changes
which have been added since then.

Co-authored-by: Javier Neira &lt;atreyu.bbb@gmail.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#1d96fb8</div>
                                        <div class="message">Specialize ghcide indent style to .hs (#2631)</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#22e5ebd</div>
                                        <div class="message">Fix off by one indexing error (#2629)

Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#aea3579</div>
                                        <div class="message">Drop bytestring-encoding (#2628)

Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#96d2c04</div>
                                        <div class="message">Fix #2612 - hlint plugin - Apply fixities to parsed source before sending to apply-refact (#2624)

* fix #2612. apply fixities to parsed source before sent to apply-refact

* fix tests

* dont hardcode getApplyHintText

* try and fix pedantic warning

* fix cpp

* fix cpp 2

* actually fix pendantic warnings because import is not used when hlint_ghc_lib is on</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#ffd0f34</div>
                                        <div class="message">fix positionInRange (#2625)

* add a failing test case for positionInRange

* fix positionInRange in PluginUtils

* add hls-plugin-api to CI

* fix ci

Co-authored-by: Javier Neira &lt;atreyu.bbb@gmail.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#92a8cc0</div>
                                        <div class="message">Use ghc+integer-gmp for alpine linux build release (#2615)

* Remove integer-simple workaround

* Skip upload to the release

* Fix echo cabal.project

* Echo PATH

* Use specific cache for build

* runner not allowed out of steps

* Use common cache

* Use raw ubuntu for ghc-9.2.1

* Enable alpine for ghc-9.2.1

* Replace gitrev with githash

* Handle GitInfo exception

As it breaks `cabal install`

* Clean up build workflow</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#f0bbc39</div>
                                        <div class="message">Rework features documentation (#2603)

* Rework features documentation

This does a few things:
- Adds a clear listing of which LSP methods we support, and which we
don't (requested a couple of times recently).
- Lists every code action and code lens, which plugin provies them,
their status, and code action kind where applicable (apart from Wingman
because there are lots and I couldn't figure it all out).

Possibly some of this information belongs elsewhere, e.g. perhaps
instead of listing which versions don't have full support on this page,
we should instead add a page to the GHC support page that lists which
plugins work on which versions. Not sure.

* Add a couple of known limitations

* Move plugin GHC version support to other page

* Purge useless status column

* Update docs/features.md

Add link to qualify imported names readme

* Update docs/features.md

* Update docs/features.md

* Update docs/features.md

* Update docs/features.md

* Update docs/features.md

i don't know how to use github

* Clarify text

* Mention limitations of apply-refact

Co-authored-by: J. S &lt;document_done@hotmail.com&gt;
Co-authored-by: Pepe Iborra &lt;pepeiborra@gmail.com&gt;
Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#b937baa</div>
                                        <div class="message">Use helpers from lsp to do code action prefixing (#2614)

Nicer version as promised in
https://github.com/haskell/haskell-language-server/pull/2146.

Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#b5b8449</div>
                                        <div class="message">Wingman: Fix fundeps (#2611)

* Fix fundeps

* One unifier to rule them all

* Fix imports

Co-authored-by: Pepe Iborra &lt;pepeiborra@gmail.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#b5c6dd0</div>
                                        <div class="message">Wingman idioms (#2607)

* Allow idiom brackets

* Allow record construction idioms

* expected result

* Fix noExtField</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#2558035</div>
                                        <div class="message">Make work stack-9.2.1.yaml and enable `pedantic` (`-WError`) for cabal  (#2606)

* Enable brittany for ghc-9.0.2

* Make works using cabal freeze

* Add stack 9.2.1 to ci

* Use new *molu versions

* Enable rename for stack 9.2.1

* Use last ghc-lib

* Use correct boot pkgs

* Use last ghc-exactprint

* Reorganize and use lens-5.1

* update retrie

* Comment class plugin package

* Handle Nothing case

* Restore ghc-typelits deps

* More non-exhaustive patterns

* More non-exhaustive patterns

* Set pedantic (-WError) true for cabal

* Remove pedantic as we set it out in cabal.project

* Not set pedantic for ghc-9.2.1

* Set pedantic in cabal.project's

* More non-exhaustive patterns

* Not set pedantic for ghc-9.0.1

* More incomplete patterns

* Fix WErrors

* Dodgy import

* Correct CPP conditions

* Not MonadFail in Prelude

* Fix more warnings

* Restore missing fun

* unused imports

* Enable refine imports

* more fixes

* Enable brittany in nix for 9.0.1

* Use newer prettyprinter

* Return to master

* Enable tactics in stack-9.2.1.yaml

* Enable pedantic in ci

* Avoid deprecation warning with CPP �

* Use default prettyprinter

* Update refinery for ghc-9.2.1

* Ignore deprecations

* Use dev version of ghc-source-gen

* disable wingman for 9.2.1

* Enable wingman for 9.0.2

* disable tactic with flag

* yaml grammar

* Use setup-build action

* Correct workflow

* Build flags for al major os's

* The integer twaek is needed for the solver

* Disable tests beforehand

* flags only affect local packages

* Exclude 8.6.5

* Exclude 8.8.4</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#905f8f7</div>
                                        <div class="message">Improve qualified import plugin readme (#2605)

After seeing #2603 might as well improve the docs a little so we can maybe link to it.

Co-authored-by: mergify[bot] &lt;37929162+mergify[bot]@users.noreply.github.com&gt;</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#95987a7</div>
                                        <div class="message">Correct typo in Ide.Arguments:listPluginsParser (#2604)</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#d640d13</div>
                                        <div class="message">GHC-9.0 support for hls-tactics-plugin (#2581)

* Initial partially broken ghc9 support for tactics

It compiles and most tests succeed, but some fail.
In particular, the ones where it should suggest `show` fails to find
that as a possible solution and fails to find evidence for `Show a`.

* Enable tactics plugin for nix as well

* Wingman does support ghc9 now

* Fix stack support for tactics ghc-9.0.1

* Enable tests for tactics on ghc-9 on ci

* Actually enable tactics for ghc-9 on nix

* Wingman: Improve test failure messages

Previously when wingman fails to find a solution, the test failure
would say "Timed out when waiting for a message".
Now it instead prints the error message from wingman.

* Get theta

* Make wrapper theta discovery more reliable

* Fix AutoThetaRankN

* Fix FmapJoin and FmapJoinInLet

* Fix MetaBegin

* Cleanup

* Fix merge

More fixing the merge

No, seriously fix the merge

Fix a broken merge

* Need a comma

* Try a better ConPatIn

* Oops

* its a nightmare

* i hate ci

* ok that fixes the conpat

* Maybe this is the end of it

* ci

* refinery

* undo some changes

* no more tctypes?

* maybe it builds now

* omg

* om F g

* expect fail on 9.2

* fix

* fix again

Co-authored-by: Andreas Källberg &lt;anka.213@gmail.com&gt;
Co-authored-by: Javier Neira &lt;atreyu.bbb@gmail.com&gt;</div>
                                    </div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#1047 Parser: work on NAppDef &amp; OperatorInfo related code</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by Anton-Latukha in <span class="repo">haskell-nix/hnix</span></div>
                                    <div class="comment">
                                        This PR honestly puzzled me a bit &amp; continues to.
The inconsistency of structures in the main data type
                                        <code>NOperatorDef</code>
                                        produces a pretty dirty type class instances.
There should be an idiomatic way to solve this.
Now I think it is probably the Type Family, but it needs a bit more experimentation to find the right form for me. I plan to revisit this part in some time, or you may also have ideas about it.
But currently, I was happy just to close it as good enough, and for nitpickes there are notes to address them. At the moment want to devote time to finish several older important processes.
                                    </div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M10.5 7.75a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zm1.43.75a4.002 4.002 0 01-7.86 0H.75a.75.75 0 110-1.5h3.32a4.001 4.001 0 017.86 0h3.32a.75.75 0 110 1.5h-3.32z"/>
                                    </svg>
                                    <div class="content">
                                        Pushed 71 commits in
                                        <span class="repo">haskell-nix/hnix</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>on branch <span class="code">master</span></div>
                                    <div class="commit">
                                        <div class="sha">#42b74b2</div>
                                        <div class="message">Parser: NOperatorDef: ord fields to match OperatorInfo</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#48d9979</div>
                                        <div class="message">Parser: NOperatorDef: ord fields</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#f8b7fff</div>
                                        <div class="message">Parser: OperatorInfo: ord fields

Ordering in the cardinality/use.</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#8857e52</div>
                                        <div class="message">Parser: NAppDef: rm NAssoc</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#a3e3b50</div>
                                        <div class="message">Parser: cast precedence (NOperatorDef-&gt;OperatorInfo) directly</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#7e7fbae</div>
                                        <div class="message">Parser: add &amp; use NOpPrecedence</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#6af275d</div>
                                        <div class="message">Parser: add &amp; use NOpName</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#987093e</div>
                                        <div class="message">Lint: merge: refactor</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#f7d1519</div>
                                        <div class="message">Lint: unify: allow any internal type in the context

Allows not applying `void` externally.</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#5c8f1f6</div>
                                        <div class="message">Lint: add &amp; use mkSymbolic1</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#058a74a</div>
                                        <div class="message">treewide: stop using for{,M}{,_}, use traverse{,_}</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#2be2103</div>
                                        <div class="message">hlint: stop advising for{,M}{,_}, use traverse{,_}</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#0a1e05f</div>
                                        <div class="message">hlint: advise traverse</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#a9aa57a</div>
                                        <div class="message">Value.Equal: isDerivationM: refactor</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#18c9c03</div>
                                        <div class="message">Value.Equal: compateAttrSetsM: refactor into lambda</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#11fdadb</div>
                                        <div class="message">Value.Equal: compateAttrSetsM: refactor into lambda</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#43c55ac</div>
                                        <div class="message">Value.Equal: compateAttrSetsM: refactor into lambda</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#5741973</div>
                                        <div class="message">Value.Equal: compateAttrSetsM: refactor into lambda</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#f361fea</div>
                                        <div class="message">Value.Equal: compateAttrSetsM: refactor into lambda

M  src/Nix/Value/Equal.hs</div>
                                    </div>
                                    <div class="commit">
                                        <div class="sha">#eaca311</div>
                                        <div class="message">Value.Equal: compateAttrSetsM: refactor into lambda</div>
                                    </div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z"/>
                                    </svg>
                                    <div class="content">
                                        Merged
                                        <span class="issue">#1047 Parser: work on NAppDef &amp; OperatorInfo related code</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div> in <span class="repo">haskell-nix/hnix</span></div>
                                    <div>19 files changed <span class="code">++611 --503</span></div>
                                </div>
                            </section>
                        </div>
                    </section>
                </div>
            </section>
        </div>
        <div xmlns="http://www.w3.org/1999/xhtml" id="metrics-end"></div>
    </foreignObject>
</svg>