<svg xmlns="http://www.w3.org/2000/svg" width="480" height="398" class="">
    <defs>
        <style/>
    </defs>
    <style>@keyframes animation-gauge{0%{stroke-dasharray:0 329}}@keyframes animation-fade{0%{opacity:0}to{opacity:1}}@keyframes animation-rainbow{0%,to{color:#7f00ff;fill:#7f00ff}14%{color:#a933ff;fill:#a933ff}29%{color:#007fff;fill:#007fff}43%{color:#00ff7f;fill:#00ff7f}57%{color:#ff0;fill:#ff0}71%{color:#ff7f00;fill:#ff7f00}86%{color:red;fill:red}}svg{font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;font-size:14px;color:#777}h2{margin:8px 0 2px;padding:0;color:#0366d6;font-weight:400;font-size:16px}h2 svg{fill:currentColor}section&gt;.field{margin-left:5px;margin-right:5px}.field{display:flex;align-items:center;margin-bottom:2px;white-space:nowrap}.field svg{margin:0 8px;fill:#959da5;flex-shrink:0}.row{display:flex;flex-wrap:wrap}.row section{flex:1 1 0}#metrics-end,.fill-width{width:100%}.stargazers .chartist .ct-post{fill:rgba(127,127,127,.8)!important;color:rgba(127,127,127,.8)!important;font-size:9px;text-anchor:middle}.activity{margin-bottom:12px}.activity .field{width:100%;overflow:hidden;text-overflow:ellipsis;max-width:450px;white-space:nowrap;margin-bottom:0}.activity .field .content{flex-grow:1;text-overflow:ellipsis;overflow:hidden}.activity .issue,.activity .repo{display:inline;color:#58a6ff}.activity .code,code,span.code{background-color:#7777771f;border-radius:6px;color:#777;padding:1px 5px;font-size:80%;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace}.activity .code,span.code{margin:0 4px -3px}.activity .details{padding-left:38px;display:flex;flex-direction:column;font-size:13px;color:#666}.activity .details&gt;.comment,.project .description{overflow:hidden;text-overflow:ellipsis;display:block;width:420px;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical}.activity .details&gt;.comment{margin-top:6px;border-left:3px solid #777777b2;padding-left:6px}.people{padding:0 10px}.project .description{margin-left:37px;max-height:38px;font-size:12px;white-space:normal}code{display:inline-block}:root{--color-calendar-graph-day-bg:#ebedf0;--color-calendar-graph-day-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-bg:#9be9a8;--color-calendar-graph-day-L2-bg:#40c463;--color-calendar-graph-day-L3-bg:#30a14e;--color-calendar-graph-day-L4-bg:#216e39;--color-calendar-halloween-graph-day-L1-bg:#ffee4a;--color-calendar-halloween-graph-day-L2-bg:#ffc501;--color-calendar-halloween-graph-day-L3-bg:#fe9600;--color-calendar-halloween-graph-day-L4-bg:#03001c;--color-calendar-graph-day-L4-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L3-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L2-border:rgba(27,31,35,0.06);--color-calendar-graph-day-L1-border:rgba(27,31,35,0.06)}</style>
    <style/>
    <foreignObject x="0" y="0" width="100%" height="100%">
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" class="items-wrapper">
            <section>
                <h2 class="field">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                        <path fill-rule="evenodd" d="M0 8a8 8 0 1116 0v5.25a.75.75 0 01-1.5 0V8a6.5 6.5 0 10-13 0v5.25a.75.75 0 01-1.5 0V8zm5.5 4.25a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zM3 6.75C3 5.784 3.784 5 4.75 5h6.5c.966 0 1.75.784 1.75 1.75v1.5A1.75 1.75 0 0111.25 10h-6.5A1.75 1.75 0 013 8.25v-1.5zm1.47-.53a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 011.06 0l.97.97.97-.97a.75.75 0 111.06 1.06l-1.5 1.5a.75.75 0 01-1.06 0L8 7.81l-.97.97a.75.75 0 01-1.06 0l-1.5-1.5a.75.75 0 010-1.06z"/>
                    </svg>
                    Recent activity
                </h2>
                <div class="row">
                    <section>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#169 Start careers infrastructure and a stab at the devops position posting.</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by myShoggoth in <span class="repo">haskellfoundation/haskellfoundation.github.io</span></div>
                                    <div class="comment">I, Haskell tooling specialist, Hakell-Nix specialist, classic DevOps, Nix DevOps, IT Telecommunication engineer, diplomat. As I was seriously joking, to prove the situation - propose to work for 356$/m, it would be 0.04 of the budget.
The reason is simple. I work on Haskell &amp; Nix tooling for 3 years, in Haskell for 5 years, in DevOps from 2003 (first Linux), IT from before kindergarten.
I can not lend a Haskell job for 2.5 years. More honestly - Haskell is present mostly in US/EU, &amp; I, Ukrainian, was continuously refused for 2.5 years, in which I expected to save myself.
356$/m is more a statement for your thought. For 2.5 years "the western world" refused me to save my life.</div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.75 2.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 01.75.75v2.19l2.72-2.72a.75.75 0 01.53-.22h4.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25H2.75zM1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0113.25 12H9.06l-2.573 2.573A1.457 1.457 0 014 13.543V12H2.75A1.75 1.75 0 011 10.25v-7.5z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#169 Start careers infrastructure and a stab at the devops position posting.</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by myShoggoth in <span class="repo">haskellfoundation/haskellfoundation.github.io</span></div>
                                    <div class="comment">
                                        In preparation of this job description, several things were missed.
The most important structural piece - is ... requirements. My first message in the thread addressed that: https://github.com/haskellfoundation/haskellfoundation.github.io/pull/169#discussion_r780769817

Nix stack

If Ben said that several core services work on NixOS servers - why that not in the requirements? You expect people learn Nix, NixOS &amp; NixOps on a whim? To manage &amp; deploy the core infrastructure? In fact - Nix is even harder to learn &amp; use than Haskell, Nix has a lot of design &amp; implementation flaws, bad syntax, tooling complexity is through the roof, vague terminology &amp; its use, lack of documentation, Conway's law consequences &amp; Cognitive dimensions of notation in Nix are through the roof. It is seen from the mile-long blogposts people white show that it is a fact (person in that article not even managed to grasp Flakes &amp; it is a smart person). I would say that the best way to learn Nix is through Haskell, otherwise - how a person would do a code design, read &amp; write different folds, fixpoint combinators, &amp; recursive structures used in core libraries &amp; write code in Nix? Nix does not those structures properly.
But it is simple, if core services work on NixOS servers - why is knowledge Nix &amp; NixOS not in the requirements or at least bonus skills?
Not to mention that overall core Haskell projects have Nix bootstraps everywhere.
The person can not be expected to transfer from classical DevOps into Nix DevOps - it is as to get imperative programmer &amp; give him to be responsible for the Haskell code in production.
Save time - mention Nix stack.

"Haskell is not required"

The very first of 4 standard questions asked on the interview was: "How you arrived into Haskell".
It is a strange contradiction.
The main proof:
Cabal CI is done through the custom Haskell code. Cabal in the core piece that is severely understaffed &amp; needs a lot of DevOps attention. Proof of that would be that
                                        <code>[Mikolaj](https://github.com/Mikolaj)</code>
                                        asked me personally several times to help with infrastructure, but I do not have time - I have no money &amp; no work &amp; in search for work, I need to sit &amp; do "write Assembler implementation in 4 hours", "write Queuing theory modeling program in 4 hours" - implicitly 40-60h-long Haskell testing assignments, without any hope of anyone hiring me, I do not have money to sleep, eat or live for the last 2.5 years - how in that situation I would find the time to also help him? &amp; I do not have the authority to touch such a core piece of the infrastructure, so despite wanting to help - I can not carve a time from my busy 0-earnings schedule.
The question of the position - is to work with Cabal tooling all the time. Cabal is not easy to know as a Haskeller, moreover without knowing Haskell programming or package management. How a person would do package management &amp; architect design if they do not know how the main tool works, &amp; the design &amp; implications of package management in Haskell. I can tell you funny stories about me generating Haddock, from the past.
Other infrastructure pieces obviously also have custom scripts written in Haskell &amp; custom pieces of infrastructure written in Haskell.
How Haskell is not a requirement. And even "Haskell is not required" - is almost beyond my imagination.

Experience with MediaWiki &amp; other more exotic infrastructure pieces need to be mentioned as a bonus.

Of course, Ward Cunningham (creator of WikiWikiWeb &amp; Wiki ideas) is right that MediaWiki is a deeply failed design (which design results HaskellWiki also experiences) but nevertheless. Maybe the situation can be salvaged by migrating Wiki to something Markdown-based, if there ever be time or courage for such things.
But in infrastructure there are other such things, that would be nice to mention as bonus knowledge.

Please, reformulate the requirements to the real ones &amp; adjust the interview process accordingly.

Precisely because the main piece that is important in job application - was not attended to.
The vague requirements create a situation:

a lot of people apply, which have mandatory for the position Haskell &amp; Nix experience
a lot of Junior DevOps'es apply
responsible people that feel that posting is not formulated - decide to not apply because of it not stating what is required
Senior DevOps'es reed the invitation &amp; perceive it is as ... Mature job posting conveys what the work is, Senior DevOps perceive the lack on information &amp; understand that it obviously needs a lot more than that &amp; that it would take effort &amp; time to even know the requirements &amp; so they decide to apply to other positions in the market.
As a result, the stream of mostly unfitting job applications ingress.
A lot of people waste time sending letters, arranging meetings.
Andrew needs to sieve through the ocean of applications &amp; held interviews with them trying to separate weeds from the chaff.
Then Ben need to also, waste time scheduling &amp; seeing that applicant does not have the required experience and is not ready for the work.



I wanted to help to reformulate the requirements, before interview I wrote the speech, helping Haskell Foundation, steelmanning the view of what Haskell Foundation really searches for, at least Andrews, but I went with Andrews process &amp; was refuted.
At least, please, - do yourself a favour - change the description of the position.

Talking only 1 person for DevOps - is also a huge mistake.

Who would do dialectics, where synthesis would come from, who would see through architecture to do design control, who would do peer review, control that docs are clear &amp; written, would prevent from secret knowledge lock-in, would keep from constant temptations to do &amp; fix things manually &amp; not do infrastructure as a code. Who is the person who would do that? Ben?
No - infrastructure needs at least 2 people, it is a tight company, but the nice one. 3 - would be desirable.
                                    </div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path d="M8 9.5a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"/>
                                        <path fill-rule="evenodd" d="M8 0a8 8 0 100 16A8 8 0 008 0zM1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0z"/>
                                    </svg>
                                    <div class="content">
                                        Opened
                                        <span class="issue">#6 Proposition to revive the project</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened  in <span class="repo">github/deli</span></div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M2.5 1.75a.25.25 0 01.25-.25h8.5a.25.25 0 01.25.25v7.736a.75.75 0 101.5 0V1.75A1.75 1.75 0 0011.25 0h-8.5A1.75 1.75 0 001 1.75v11.5c0 .966.784 1.75 1.75 1.75h3.17a.75.75 0 000-1.5H2.75a.25.25 0 01-.25-.25V1.75zM4.75 4a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM4 7.75A.75.75 0 014.75 7h2a.75.75 0 010 1.5h-2A.75.75 0 014 7.75zm11.774 3.537a.75.75 0 00-1.048-1.074L10.7 14.145 9.281 12.72a.75.75 0 00-1.062 1.058l1.943 1.95a.75.75 0 001.055.008l4.557-4.45z"/>
                                    </svg>
                                    <div class="content">
                                        Reviewed
                                        <span class="issue">#177 replace the filepath argument in `addToStore` with a more common type `NarSource` (The core part)</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by soulomoon in <span class="repo">haskell-nix/hnix-store</span></div>
                                </div>
                            </section>
                        </div>
                        <div class="row fill-width">
                            <section class="activity">
                                <div class="field">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                                        <path fill-rule="evenodd" d="M1.5 2.75a.25.25 0 01.25-.25h12.5a.25.25 0 01.25.25v8.5a.25.25 0 01-.25.25h-6.5a.75.75 0 00-.53.22L4.5 14.44v-2.19a.75.75 0 00-.75-.75h-2a.25.25 0 01-.25-.25v-8.5zM1.75 1A1.75 1.75 0 000 2.75v8.5C0 12.216.784 13 1.75 13H3v1.543a1.457 1.457 0 002.487 1.03L8.061 13h6.189A1.75 1.75 0 0016 11.25v-8.5A1.75 1.75 0 0014.25 1H1.75zm5.03 3.47a.75.75 0 010 1.06L5.31 7l1.47 1.47a.75.75 0 01-1.06 1.06l-2-2a.75.75 0 010-1.06l2-2a.75.75 0 011.06 0zm2.44 0a.75.75 0 000 1.06L10.69 7 9.22 8.47a.75.75 0 001.06 1.06l2-2a.75.75 0 000-1.06l-2-2a.75.75 0 00-1.06 0z"/>
                                    </svg>
                                    <div class="content">
                                        Commented on
                                        <span class="issue">#177 replace the filepath argument in `addToStore` with a more common type `NarSource` (The core part)</span>
                                    </div>
                                </div>
                                <div class="details">
                                    <div>opened by soulomoon in <span class="repo">haskell-nix/hnix-store</span></div>
                                    <div class="comment">
                                        <i>I never mind the longread, and having someone showing the direction and communicate is always a good thing</i>
                                        I also believe so, trying to stick to the dialectical method as the only scientific method of dialog possible, and so I also await good argumentation from people in a dialectic way to make a decision.
                                        <i>especially when I am a newcomer to the this project, thank you for it</i>
                                        I trusted you from the first lines of code you send. I've seen that you have a good level of professionalism &amp; that you wrote the code close to how I would write it. You also managed to implement &amp; ship things in a complex codebase. It is possible to hold a productive dialog with you.
Nota bene: Mitchell Hashimoto fell in love with NixOS - which is a big thing, because HashiCorp is the most direct developer structure, he likes something - it gets implemented by the company in Enterprise masterpiece. So soon I expect much more movement around Nix or some isomorphic DLS &amp; tide lifts all boats.
After you received an invitation to be a maintainer - you are one from the team.
                                    </div>
                                </div>
                            </section>
                        </div>
                    </section>
                </div>
            </section>
        </div>
        <div xmlns="http://www.w3.org/1999/xhtml" id="metrics-end"></div>
    </foreignObject>
</svg>